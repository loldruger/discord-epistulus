name: Deploy to Cloud Run

on:
  push:
    branches:
      - main # main 브랜치에 푸시될 때 실행

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: asia-northeast3 # Artifact Registry 위치
  GAR_REPOSITORY: epistulus # Artifact Registry repository name
  SERVICE_NAME: discord-epistulus-service # Cloud Run service name
  REGION: asia-northeast3 # Cloud Run 리전
  IMAGE_NAME: discord_epistulus # Docker image name

jobs:
  build-and-deploy:
    name: Build, Push, and Deploy
    runs-on: ubuntu-latest

    permissions: # Workload Identity Federation 사용 시 필요
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud (Workload Identity Federation)
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }} # 예: projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
        service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }} # 예: my-service-account@my-project.iam.gserviceaccount.com

    # (서비스 계정 키 사용 시 대체 인증 방법)
    # - name: Authenticate to Google Cloud (Service Account Key)
    #   uses: google-github-actions/auth@v2
    #   with:
    #     credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Get OIDC Token for debug
      id: get_oidc_token
      uses: actions/github-script@v7
      with:
        result-encoding: string
        script: |
          return await core.getIDToken()

    - name: Decode OIDC Token for debug
      run: |
        echo "Raw OIDC Token: ${{ steps.get_oidc_token.outputs.result }}"
        echo "Decoded OIDC Token Payload:"
        TOKEN_PAYLOAD=$(echo "${{ steps.get_oidc_token.outputs.result }}" | cut -d. -f2 | base64 --decode)
        echo "${TOKEN_PAYLOAD}" | jq .
        echo "Subject (sub) claim from token:"
        ACTUAL_SUBJECT=$(echo "${TOKEN_PAYLOAD}" | jq -r .sub)
        echo "${ACTUAL_SUBJECT}"
        echo "::set-output name=actual_subject::${ACTUAL_SUBJECT}" # 다음 스텝에서 사용 가능하도록